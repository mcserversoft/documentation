"use strict";(self.webpackChunkmcss_docs=self.webpackChunkmcss_docs||[]).push([[210],{28453:(e,s,t)=>{t.d(s,{R:()=>d,x:()=>o});var i=t(96540);const n={},r=i.createContext(n);function d(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),i.createElement(r.Provider,{value:s},e.children)}},81017:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"API/admin","title":"Admin Permissions","description":"How to authorize new users on your API","source":"@site/docs/API/admin.md","sourceDirName":"API","slug":"/API/admin","permalink":"/API/admin","draft":false,"unlisted":false,"editUrl":"https://github.com/mcserversoft/documentation/edit/main/docs/API/admin.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Admin Permissions","description":"How to authorize new users on your API"},"sidebar":"tutorialSidebar","previous":{"title":"Endpoints","permalink":"/API/endpoints"},"next":{"title":"FAQ - Frequently Asked Questions","permalink":"/faq"}}');var n=t(74848),r=t(28453);const d={sidebar_position:3,title:"Admin Permissions",description:"How to authorize new users on your API"},o=void 0,c={},a=[{value:"Protected API Routes",id:"protected-api-routes",level:2}];function l(e){const s={a:"a",code:"code",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"Admin is a very powerful permissions to grant. While it respects individual server access & permissions, it provides MCSS backend functionality to the User or API Key."}),"\n",(0,n.jsxs)(s.p,{children:["Introduced in ",(0,n.jsx)(s.code,{children:"v13.5"}),", it grants access to user management tools like user creation, deletion and updating. The amount of functionality is limited, this will be expanded in the near future."]}),"\n",(0,n.jsx)(s.h2,{id:"protected-api-routes",children:"Protected API Routes"}),"\n",(0,n.jsx)(s.p,{children:"These routes require admin rights:"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"HTTP Method"}),(0,n.jsx)(s.th,{children:"Route"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"GET"}),(0,n.jsx)(s.td,{children:"/api/v2/users"}),(0,n.jsx)(s.td,{children:"Retrieve list of users"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"GET"}),(0,n.jsxs)(s.td,{children:["/api/v2/users/",":userId"]}),(0,n.jsx)(s.td,{children:"Retrieve a specific user"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"POST"}),(0,n.jsx)(s.td,{children:"/api/v2/users"}),(0,n.jsx)(s.td,{children:"Create a new user"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"PUT"}),(0,n.jsxs)(s.td,{children:["/api/v2/users/",":userId"]}),(0,n.jsx)(s.td,{children:"Edit an existing user"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"DELETE"}),(0,n.jsxs)(s.td,{children:["/api/v2/users/",":userId"]}),(0,n.jsx)(s.td,{children:"Delete an existing user"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"POST"}),(0,n.jsx)(s.td,{children:"/api/v2/users/wipe/sessions"}),(0,n.jsx)(s.td,{children:"Wipe all active sessions"})]})]})]}),"\n",(0,n.jsxs)(s.p,{children:["For more info about these routes visit the ",(0,n.jsx)(s.a,{href:"/apis/v2#tag/Users",children:"Users API Documentation"}),"."]})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);