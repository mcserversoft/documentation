import{_ as e,c as s,o as r,at as i}from"./chunks/framework.DcKAIdBL.js";const m=JSON.parse('{"title":"Admin Permissions","description":"How to authorize new users on your API","frontmatter":{"sidebar_position":3,"title":"Admin Permissions","description":"How to authorize new users on your API"},"headers":[],"relativePath":"api/admin.md","filePath":"api/admin.md","lastUpdated":null}'),d={name:"api/admin.md"};function a(o,t,n,p,u,c){return r(),s("div",null,t[0]||(t[0]=[i('<p>Admin is a very powerful permissions to grant. While it respects individual server access &amp; permissions, it provides MCSS backend functionality to the User or API Key.</p><p>Introduced in <code>v13.5</code>, it grants access to user management tools like user creation, deletion and updating. The amount of functionality is limited, this will be expanded in the near future.</p><h2 id="protected-api-routes" tabindex="-1">Protected API Routes <a class="header-anchor" href="#protected-api-routes" aria-label="Permalink to &quot;Protected API Routes {#protected-api-routes}&quot;">â€‹</a></h2><p>These routes require admin rights:</p><table tabindex="0"><thead><tr><th>HTTP Method</th><th>Route</th><th>Description</th></tr></thead><tbody><tr><td>GET</td><td>/api/v2/users</td><td>Retrieve list of users</td></tr><tr><td>GET</td><td>/api/v2/users/:userId</td><td>Retrieve a specific user</td></tr><tr><td>POST</td><td>/api/v2/users</td><td>Create a new user</td></tr><tr><td>PUT</td><td>/api/v2/users/:userId</td><td>Edit an existing user</td></tr><tr><td>DELETE</td><td>/api/v2/users/:userId</td><td>Delete an existing user</td></tr><tr><td>POST</td><td>/api/v2/users/wipe/sessions</td><td>Wipe all active sessions</td></tr></tbody></table>',5)]))}const h=e(d,[["render",a]]);export{m as __pageData,h as default};
